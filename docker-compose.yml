version: "3.0"

services:

  # --------------------------- HTTP and WS server --------------------------- #

  server:
    build:
      context: .
      dockerfile: ./build/Dockerfile.prod
    container_name: server
    env_file:
      - .env
    ports:
      - "${HTTP_PORT}:${HTTP_PORT}"
      - "${WS_PORT}:${WS_PORT}"
    networks:
      - docker_net
    pid: host
    restart: unless-stopped
    volumes:
      - "./src/logs:/app/logs"
    depends_on:
      - mongo

  # -------------------------------- Mongo DB -------------------------------- #

  mongo:
    image: mongo:7
    env_file:
      - .env
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=project
    networks:
      - docker_net
    volumes:
      - "db_data:/data/db"
      
  mongo-express:
    image: mongo-express:1.0.2-20-alpine3.19
    env_file:
      - .env
    restart: unless-stopped
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
      - ME_CONFIG_MONGODB_AUTH_USERNAME=${MONGO_ROOT_USER}
      - ME_CONFIG_MONGODB_AUTH_PASSWORD=${MONGO_ROOT_PASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGOEXPRESS_LOGIN}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGOEXPRESS_PASSWORD}
    depends_on:
      - mongo
    ports:
      - "8888:8081"
    networks:
      - docker_net

networks:
  docker_net:

volumes:
  db_data: